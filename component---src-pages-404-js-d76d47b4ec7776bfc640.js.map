{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Email.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Seo.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Menu.js","webpack:///./src/components/Header.js","webpack:///./src/components/Footer.js","webpack:///./src/components/Layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Layout__WEBPACK_IMPORTED_MODULE_1__","_components_Seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","m","module","exports","require","default","Email","style","display","ProdPageRenderer","_ref","location","pageResources","React","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","concat","length","join","defaultProps","loader","enqueue","createContext","MenuItems","styled","div","withConfig","displayName","componentId","MenuItem","li","Menu","children","react_default","Children","map","child","index","Fragment","count","fontStyle","userSelect","BrandLink","Link","BrandTitle","h1","BrandText","p","Nav","nav","PrintHeader","ContactInfo","StackBox","activeStyles","fontWeight","Header","siteTitle","href","components_Menu","gatsby_link_default","to","activeStyle","Container","footer","Footer","author","Date","getFullYear","GlobalStyle","createGlobalStyle","_templateObject","PageContainer","main","Layout","_3497927624","components_Header","components_Footer"],"mappings":"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","file":"component---src-pages-404-js-d76d47b4ec7776bfc640.js","sourcesContent":["import React from \"react\"\r\n\r\nimport Layout from \"../components/Layout\"\r\nimport SEO from \"../components/Seo\"\r\n\r\nconst NotFoundPage = () => (\r\n  <Layout>\r\n    <SEO title=\"404: Not found\" />\r\n    <h1>NOT FOUND</h1>\r\n    <p>You just hit a route that doesn&#39;t exist...</p>\r\n  </Layout>\r\n)\r\n\r\nexport default NotFoundPage\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react';\r\n\r\nconst Email = () => {\r\n  let firstname = 'michael';\r\n  let lastname = 'nilsson';\r\n  return (\r\n    <span>\r\n      {firstname}\r\n      <span style={{ display: 'none' }} />\r\n      &#64;{lastname}\r\n      <span>{null}</span>&#46;dev\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Email;\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n      ]\r\n        .concat(\r\n          keywords.length > 0\r\n            ? {\r\n                name: `keywords`,\r\n                content: keywords.join(`, `),\r\n              }\r\n            : []\r\n        )\r\n        .concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst MenuItems = styled.div`\r\n  & ul {\r\n    list-style: none;\r\n    display: flex;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n\r\n  & a {\r\n    color: #444;\r\n    text-decoration: none;\r\n    vertical-align: bottom;\r\n\r\n    :hover {\r\n      text-decoration: none;\r\n      color: #1eaedb;\r\n    }\r\n  }\r\n\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.2em;\r\n  display: flex;\r\n  font-size: 0.8rem;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport const MenuItem = styled.li`\r\n  padding: 0 0.8rem;\r\n  margin-bottom: 0;\r\n`;\r\n\r\nconst Menu = ({ children }) => (\r\n  <MenuItems>\r\n    <ul>\r\n      {React.Children.map(children, (child, index) => (\r\n        <>\r\n          <MenuItem>{child}</MenuItem>\r\n          {React.Children.count(children) > index + 1 && (\r\n            <span style={{ fontStyle: 'italic', userSelect: 'none' }}>/</span>\r\n          )}\r\n        </>\r\n      ))}\r\n    </ul>\r\n  </MenuItems>\r\n);\r\n\r\nexport default Menu;\r\n","import { Link } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport Menu from './Menu';\r\nimport Email from './Email';\r\n\r\nconst BrandLink = styled(Link)`\r\n  display: none;\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    display: initial;\r\n  }\r\n\r\n  :hover {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst BrandTitle = styled.h1`\r\n  margin: 0px 0px 7px 0px;\r\n  color: rgba(0, 0, 0, 0.75);\r\n  line-height: 1em;\r\n\r\n  @media print {\r\n    font-size: 35px;\r\n  }\r\n`;\r\n\r\nconst BrandText = styled.p`\r\n  margin: 0em 2em 0em 0em;\r\n  color: rgba(0, 0, 0, 0.75);\r\n  font-size: 16px;\r\n`;\r\n\r\nconst Nav = styled.nav`\r\n  background-color: rgb(255, 255, 255);\r\n  max-width: 960px;\r\n  display: flex;\r\n  margin: auto;\r\n  padding: 1rem;\r\n  justify-content: space-evenly;\r\n  align-items: flex-end;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.15);\r\n\r\n  @media print {\r\n    display: none !important;\r\n  }\r\n`;\r\n\r\nconst PrintHeader = styled.div`\r\n  display: none;\r\n\r\n  @media print {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0.9em;\r\n    border-bottom: 1px solid rgba(0, 0, 0, 0.15);\r\n  }\r\n`;\r\n\r\nconst ContactInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 15px;\r\n  white-space: nowrap;\r\n  & ul {\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n  & li {\r\n    margin:0;\r\n    padding:0;\r\n  }\r\n`;\r\n\r\nconst StackBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst activeStyles = {\r\n  fontWeight: \"700\"\r\n}\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header>\r\n    <PrintHeader>\r\n      <StackBox>\r\n        <BrandTitle>{siteTitle}</BrandTitle>\r\n        <BrandText>I am a Swedish software developer that enjoys solving interesting problems with code both professionally and as a hobby. I have a great interest in new technologies and I am driven by building innovative solutions. My strengths lie in web technologies, .NET and computer graphics.</BrandText>\r\n      </StackBox>\r\n      <ContactInfo>\r\n        <ul>\r\n          <li>+46 704 25 3993</li>\r\n          <li>Storgatan 6, 582 23 Linköping</li>\r\n          <li><Email /></li>\r\n          <li><a href=\"https://nilsson.dev\">https://nilsson.dev</a></li>\r\n        </ul>\r\n      </ContactInfo>\r\n    </PrintHeader>\r\n    <Nav>\r\n      <Menu>\r\n        <Link to={'/'} activeStyle={activeStyles}>About</Link>\r\n        <Link to={'/work'} activeStyle={activeStyles}>Work</Link>\r\n        <Link to={'/cv'} activeStyle={activeStyles}>CV</Link>\r\n      </Menu>\r\n      <BrandLink to=\"/\">\r\n        <BrandTitle>{siteTitle}</BrandTitle>\r\n      </BrandLink>\r\n    </Nav>\r\n  </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.footer`\r\n  max-width: 960px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  background-color: rgb(255, 255, 255);\r\n  border-top: 1px solid rgba(0, 0, 0, 0.15);\r\n  padding: 1rem;\r\n  text-align: center;\r\n\r\n  @media print {\r\n    display: none !important;\r\n  }\r\n`;\r\n\r\nconst Footer = ({ children, author }) => (\r\n  <Container>\r\n    <span>© {new Date().getFullYear()} • {author}. All rights reserved.</span>\r\n  </Container>\r\n);\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\nimport styled, { createGlobalStyle } from 'styled-components';\r\n\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html {\r\n    height: 100%;\r\n  }\r\n\r\n  body {\r\n    height: 100%;\r\n    background-color: rgb(242, 242, 242);\r\n  }\r\n`;\r\n\r\nconst PageContainer = styled.main`\r\n  width: 100%;\r\n  max-width: 960px;\r\n  margin: auto;\r\n  background-color: rgb(255, 255, 255);\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Layout = ({ children }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  );\r\n  return (\r\n    <>\r\n      <Header siteTitle={site.siteMetadata.title} />\r\n      <PageContainer>{children}</PageContainer>\r\n      <Footer author={site.siteMetadata.author} />\r\n      <GlobalStyle />\r\n    </>\r\n  );\r\n};\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Layout;\r\n"],"sourceRoot":""}