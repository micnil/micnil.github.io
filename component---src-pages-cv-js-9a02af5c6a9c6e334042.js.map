{"version":3,"sources":["webpack:///./src/components/cv/Section.js","webpack:///./src/pages/cv.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es7.object.entries.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_object-to-array.js"],"names":["CvSection","styled","section","CvRow","div","CvYear","attrs","theme","borderSecondary","textSecondary","defaultProps","CvContent","HTMLContent","compareDates","a","b","end","start","entryRenderer","entry","endYear","key","filePath","content","simpleEntryRenderer","Section","entries","rows","sort","map","SectionWithoutYear","props","SectionWithYear","query","CvPage","cvMap","listMap","data","allMarkdownRemark","edges","edge","mapToUpdate","node","frontmatter","type","html","fileAbsolutePath","sections","Object","lists","Layout","title","keywords","$export","$entries","S","it","DESCRIPTORS","getKeys","toIObject","isEnum","f","module","exports","isEntries","O","keys","length","i","result","call","push"],"mappings":"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","file":"component---src-pages-cv-js-9a02af5c6a9c6e334042.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { HTMLContent } from '../Content';\r\n\r\nconst CvSection = styled.section`\r\n  padding: 0.9em;\r\n\r\n  h2 {\r\n    text-transform: capitalize;\r\n    @media print {\r\n      font-size: 22px;\r\n      margin-bottom: 0.5em;\r\n    }\r\n  }\r\n\r\n  @media print {\r\n    padding: 0em 0.9em 1.7em 0.9em;\r\n    page-break-inside: avoid;\r\n    :last-child {\r\n      padding: 0em;\r\n    }\r\n    :first-child {\r\n      margin-top: 1em;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    padding: 1.5em;\r\n  }\r\n`;\r\n\r\nconst CvRow = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst CvYear = styled.div.attrs(() => ({\r\n  'data-testid':\"year\" \r\n}))`\r\n  flex: 1;\r\n  border-right: 1px solid ${({ theme }) => theme.borderSecondary};\r\n  color: ${({ theme }) => theme.textSecondary};\r\n\r\n  @media print {\r\n    font-size: 15px;\r\n  }\r\n`;\r\nCvYear.defaultProps = {\r\n  theme: {\r\n    borderSecondary: '#000',\r\n    textSecondary: '#888'\r\n  }\r\n} \r\n\r\nconst CvContent = styled(HTMLContent).attrs(() => ({\r\n  'data-testid':\"content\" \r\n}))`\r\n  flex: 5;\r\n  padding-left: 0.5em;\r\n  & p {\r\n    margin-bottom: 0px;\r\n  }\r\n  & li {\r\n    margin-bottom: 0px;\r\n  }\r\n\r\n  @media print {\r\n    flex: 6;\r\n    & p {\r\n      font-size: 16px;\r\n    }\r\n    & li {\r\n      font-size: 16px;\r\n    }\r\n    & a {\r\n      text-decoration: inherit;\r\n      color: inherit;\r\n      font-weight: inherit;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction compareDates(a, b) {\r\n  if (!a.end) {\r\n    return -1;\r\n  }\r\n  if (!b.end) {\r\n    return 1;\r\n  }\r\n  return a.end !== b.end ? b.end - a.end : b.start - a.start;\r\n}\r\n\r\nfunction entryRenderer(entry) {\r\n  let endYear = null;\r\n  if (!entry.end) {\r\n    endYear = ' - Present';\r\n  } else if (entry.end !== entry.start) {\r\n    endYear = ` - ${entry.end}`;\r\n  }\r\n  return (\r\n    <CvRow key={entry.filePath}>\r\n      <CvYear>\r\n        {entry.start}\r\n        {endYear}\r\n      </CvYear>\r\n      <CvContent content={entry.content} />\r\n    </CvRow>\r\n  );\r\n}\r\n\r\nfunction simpleEntryRenderer(entry) {\r\n  return <CvContent key={entry.filePath} content={entry.content}/>;\r\n}\r\n\r\nconst Section = ({ section, entries, entryRenderer }) => {\r\n  const rows = [...entries].sort(compareDates).map(entry => {\r\n    return entryRenderer(entry);\r\n  });\r\n\r\n  return (\r\n    <CvSection key={section}>\r\n      <h2>{section}</h2>\r\n      {rows}\r\n    </CvSection>\r\n  );\r\n};\r\n\r\nconst SectionWithoutYear = props => {\r\n  return <Section {...props} entryRenderer={simpleEntryRenderer} />;\r\n};\r\n\r\nconst SectionWithYear = props => {\r\n  return <Section {...props} entryRenderer={entryRenderer} />;\r\n};\r\n\r\nconst entryPropTypes = {\r\n  filePath: PropTypes.string,\r\n  start: PropTypes.number,\r\n  end: PropTypes.number,\r\n  content: PropTypes.string,\r\n};\r\n\r\nconst sectionPropTypes = {\r\n  section: PropTypes.string,\r\n  entries: PropTypes.arrayOf(PropTypes.shape(entryPropTypes)),\r\n};\r\n\r\nSectionWithoutYear.propTypes = sectionPropTypes;\r\nSectionWithYear.propTypes = sectionPropTypes;\r\nSection.propTypes = {\r\n  ...sectionPropTypes,\r\n  entryRenderer: PropTypes.func,\r\n};\r\n\r\nexport { SectionWithYear, SectionWithoutYear };\r\nexport default Section;\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Layout from '../components/Layout';\r\nimport SEO from '../components/Seo';\r\nimport { SectionWithoutYear, SectionWithYear } from '../components/cv/Section';\r\n\r\nconst CvPage = ({ data }) => {\r\n  let cvMap = {};\r\n  let listMap = {};\r\n  for (const edge of data.allMarkdownRemark.edges) {\r\n    let mapToUpdate = edge.node.frontmatter.type === 'list' ? listMap : cvMap;\r\n    const section = edge.node.frontmatter.section;\r\n    const entry = {\r\n      ...edge.node.frontmatter,\r\n      content: edge.node.html,\r\n      filePath: edge.node.fileAbsolutePath,\r\n    };\r\n    mapToUpdate[section] = mapToUpdate[section] || [];\r\n    mapToUpdate[section] = [...mapToUpdate[section], entry];\r\n  }\r\n\r\n  const sections = Object.entries(cvMap).map(([section, entries]) => (\r\n    <SectionWithYear key={section} section={section} entries={entries} />\r\n  ));\r\n\r\n  const lists = Object.entries(listMap).map(([section, entries]) => (\r\n    <SectionWithoutYear key={section} section={section} entries={entries} />\r\n  ));\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"CV\" keywords={['portfolio', 'cv']} />\r\n      {sections}\r\n      {lists}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMarkdownRemark(\r\n      filter: { frontmatter: { key: { eq: \"cv\" } } }\r\n      sort: { fields: frontmatter___end, order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            start\r\n            end\r\n            section\r\n            type\r\n          }\r\n          fileAbsolutePath\r\n          html\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default CvPage;\r\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n"],"sourceRoot":""}