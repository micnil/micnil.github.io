{"version":3,"file":"component---src-pages-work-js-507490ec4f13718b3586.js","mappings":"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","sources":["webpack://nilsson.dev/./src/components/work/PostHeader.js","webpack://nilsson.dev/./src/components/work/WorkContent.js","webpack://nilsson.dev/./src/components/BorderlessButton.js","webpack://nilsson.dev/./src/components/work/Excerpt.js","webpack://nilsson.dev/./src/components/work/Post.js","webpack://nilsson.dev/./src/pages/work.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Tag = styled.span`\r\n  color: ${({ theme }) => theme.textSecondary || '#888'};\r\n  text-transform: uppercase;\r\n  font-style: italic;\r\n  font-size: 0.8em;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n\r\n  h3 {\r\n    margin-bottom: 0em;\r\n  }\r\n`;\r\n\r\nconst Subtitle = styled.em`\r\n  color: ${({ theme }) => theme.textSecondary || '#888'};\r\n`;\r\n\r\nconst TagList = ({ children }) => (\r\n  <div>\r\n    {children.map((tag, i) => (\r\n      <Tag key={tag}>\r\n        {tag}\r\n        {i < children.length - 1 && ',  '}\r\n      </Tag>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nfunction PostHeader({ title, tags, year }) {\r\n  return (\r\n    <>\r\n      <Header>\r\n        <h3>{title}</h3>\r\n        <TagList>{tags}</TagList>\r\n      </Header>\r\n      <Subtitle>Started: {year}</Subtitle>\r\n    </>\r\n  );\r\n}\r\n\r\nPostHeader.propTypes = {\r\n  title: PropTypes.string,\r\n  tags: PropTypes.arrayOf(PropTypes.string),\r\n  year: PropTypes.number,\r\n};\r\n\r\nexport default PostHeader;\r\n","import styled from 'styled-components';\r\nimport { HTMLContent } from '../Content';\r\n\r\nconst WorkContent = styled(HTMLContent)`\r\n  margin-top: 0.5em;\r\n\r\n  /* Image caption */\r\n  a + em {\r\n    display: block;\r\n    text-align: center;\r\n  }\r\n\r\n  iframe {\r\n    display: block;\r\n    margin: auto;\r\n    margin-bottom: 1em;\r\n  }\r\n`;\r\n\r\nexport default WorkContent;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StyledBorderlessButton = styled.button`\r\n  color: ${({ theme }) => theme.textAccent};\r\n  align-self: flex-start;\r\n  font-family: inherit;\r\n  font-size: 100%;\r\n  margin: 0;\r\n  border: none;\r\n  background: none;\r\n  cursor: pointer;\r\n`;\r\nStyledBorderlessButton.defaultProps = {\r\n  theme: {\r\n    textAccent: 'teal',\r\n  },\r\n};\r\n\r\nconst BorderlessButton = ({ children, onClick }) => {\r\n  return (\r\n    <StyledBorderlessButton onClick={onClick}>\r\n      {children}\r\n    </StyledBorderlessButton>\r\n  );\r\n};\r\n\r\nBorderlessButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default BorderlessButton;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Img from 'gatsby-image';\r\nimport PropTypes from 'prop-types';\r\nimport PostHeader from './PostHeader';\r\nimport WorkContent from './WorkContent';\r\nimport BorderlessButton from '../BorderlessButton';\r\n\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst ColumnWithSpaceBetween = styled(Column)`\r\n  justify-content: space-between;\r\n  flex: 3;\r\n`;\r\n\r\nfunction Excerpt({\r\n  title,\r\n  content,\r\n  thumbnail,\r\n  tags,\r\n  onClickReadMore,\r\n  startYear,\r\n}) {\r\n  return (\r\n    <Column>\r\n      <PostHeader title={title} tags={tags} year={startYear} />\r\n      <Row>\r\n        <ColumnWithSpaceBetween>\r\n          <WorkContent content={content} />\r\n          <BorderlessButton onClick={onClickReadMore}>\r\n            Read more\r\n          </BorderlessButton>\r\n        </ColumnWithSpaceBetween>\r\n        {thumbnail && (\r\n          <Img style={{ flex: '1' }} fluid={thumbnail.childImageSharp.fluid} />\r\n        )}\r\n      </Row>\r\n    </Column>\r\n  );\r\n}\r\n\r\nExcerpt.propTypes = {\r\n  title: PropTypes.string,\r\n  content: PropTypes.string,\r\n  thumbnail: PropTypes.object,\r\n  tags: PropTypes.arrayOf(PropTypes.string),\r\n  onClickReadMore: PropTypes.func,\r\n  startYear: PropTypes.number,\r\n};\r\n\r\nexport default Excerpt;\r\n","import React, { useState, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport PostHeader from './PostHeader';\r\nimport WorkContent from './WorkContent';\r\nimport Excerpt from './Excerpt';\r\nimport BorderlessButton from '../BorderlessButton';\r\n\r\nconst StyledPost = styled.article`\r\n  border-top: 1px solid rgba(25, 17, 34, 0.075);\r\n  padding: 1em;\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    margin: 2em;\r\n    border-radius: 4px;\r\n    box-shadow: rgba(25, 17, 34, 0.075) 0px 3px 10px;\r\n  }\r\n`;\r\n\r\nconst Post = ({ title, tags, year, content, excerpt, thumbnail }) => {\r\n  const [readMore, setReadMore] = useState(false);\r\n  const postElement = useRef(null);\r\n  return (\r\n    <StyledPost ref={postElement}>\r\n      {readMore ? (\r\n        <>\r\n          <PostHeader title={title} tags={tags} year={year} />\r\n          <WorkContent content={content} />\r\n          <BorderlessButton\r\n            onClick={() => {\r\n              setReadMore(false);\r\n              postElement.current.scrollIntoView({ behavior: 'smooth' });\r\n            }}\r\n          >\r\n            Read less\r\n          </BorderlessButton>\r\n        </>\r\n      ) : (\r\n        <Excerpt\r\n          title={title}\r\n          content={excerpt}\r\n          thumbnail={thumbnail}\r\n          tags={tags}\r\n          startYear={year}\r\n          onClickReadMore={() => setReadMore(true)}\r\n        />\r\n      )}\r\n    </StyledPost>\r\n  );\r\n};\r\n\r\nPost.propTypes = {\r\n  title: PropTypes.string,\r\n  content: PropTypes.string,\r\n  excerpt: PropTypes.string,\r\n  thumbnail: PropTypes.object,\r\n  tags: PropTypes.arrayOf(PropTypes.string),\r\n  year: PropTypes.number,\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport styled from 'styled-components';\r\nimport Layout from '../components/Layout';\r\nimport Seo from '../components/Seo';\r\nimport Post from '../components/work/Post';\r\n\r\nconst PageHeader = styled.div`\r\n  margin: 2em;\r\n`;\r\n\r\nconst WorkPage = ({ data }) => {\r\n  const posts = data.allMarkdownRemark.edges.map(edge => {\r\n    const { node } = edge;\r\n    return (\r\n      <Post\r\n        key={node.fileAbsolutePath}\r\n        filePath={node.fileAbsolutePath}\r\n        title={node.frontmatter.title}\r\n        tags={node.frontmatter.tags}\r\n        year={node.frontmatter.start}\r\n        content={node.html}\r\n        excerpt={node.excerpt}\r\n        thumbnail={node.frontmatter.thumbnail}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Layout>\r\n      <Seo title=\"Work\" keywords={['portfolio', 'work', 'projects']} />\r\n      <PageHeader>\r\n        <h4>\r\n          {' '}\r\n          Presenting a selection of projects I am, or have been, working on.\r\n        </h4>\r\n      </PageHeader>\r\n      {posts}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMarkdownRemark(\r\n      filter: { frontmatter: { key: { eq: \"work\" } } }\r\n      sort: {\r\n        fields: [frontmatter___start, frontmatter___title]\r\n        order: [DESC, DESC]\r\n      }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            start\r\n            tags\r\n            thumbnail {\r\n              childImageSharp {\r\n                fluid(maxWidth: 400, quality: 100) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n          }\r\n          fileAbsolutePath\r\n          html\r\n          excerpt(format: HTML)\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default WorkPage;\r\n"],"names":["Tag","styled","theme","textSecondary","Header","Subtitle","TagList","children","map","tag","i","key","length","title","tags","year","HTMLContent","StyledBorderlessButton","textAccent","defaultProps","onClick","Column","Row","ColumnWithSpaceBetween","content","thumbnail","onClickReadMore","startYear","style","flex","fluid","childImageSharp","StyledPost","excerpt","useState","readMore","setReadMore","postElement","useRef","ref","current","scrollIntoView","behavior","PageHeader","posts","data","allMarkdownRemark","edges","edge","node","fileAbsolutePath","filePath","frontmatter","start","html","Layout","Seo","keywords"],"sourceRoot":""}